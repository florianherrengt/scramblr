version: 2.1

orbs:
    kubernetes: circleci/kubernetes@0.11.0
    docker: circleci/docker@1.0.0

defaults: &defaults
    working_directory: ~/repo

jobs:
    prettier:
        docker:
            - image: node:13
        steps:
            - checkout
            - run: npm i -g prettier
            - run: prettier --config .prettierrc --check **/src/**/*.{ts,tsx}

    web-test:
        <<: *defaults
        docker:
            - image: node:13
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "web/package.json" }}
                      - v1-dependencies-
            - run: yarn --cwd web install
            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "web/package.json" }}
            - run: yarn --cwd web test

    web-build:
        <<: *defaults
        docker:
            - image: node:13
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "web/package.json" }}
                      - v1-dependencies-
            - run: yarn --cwd web install
            - run: yarn --cwd web build
            - persist_to_workspace:
                  root: ~/repo
                  paths:
                      - ./web/build

    server-test:
        <<: *defaults
        docker:
            - image: node:13
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "server/package.json" }}
                      - v1-dependencies-
            - run: yarn --cwd server install
            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "server/package.json" }}
            - run: yarn --cwd server test

    server-build:
        <<: *defaults
        docker:
            - image: node:13
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "server/package.json" }}
                      - v1-dependencies-
            - run: npm i -g typescript
            - run: yarn --cwd server
            - run: yarn --cwd server build
            - persist_to_workspace:
                  root: ~/repo
                  paths:
                      - ./server/build

    cypress-test:
        docker:
            - image: node:13
              environment:
                  CYPRESS_BASE_URL: http://localhost:8080
                  JWT_SECRET: secret
                  DATABASE_TYPE: postgres
                  DATABASE_NAME: postgres
                  DATABASE_USERNAME: postgres
                  DATABASE_PASSWORD: postgres
                  DATABASE_SSL: '0'
            - image: circleci/postgres:11
              environment:
                  POSTGRES_PASSWORD: postgres

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "web/package.json" }}
                      - v1-dependencies-{{ checksum "server/package.json" }}
                      - v1-dependencies-
            - run:
                  name: install dockerize
                  command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
                  environment:
                      DOCKERIZE_VERSION: v0.6.1
            - run:
                  name: Wait for db
                  command: dockerize -wait tcp://localhost:5432 -timeout 1m
            - run: yarn --cwd web install
            - run: yarn --cwd server install
            - run: yarn --cwd server start
            - run: yarn --cwd web wait:server -- $CYPRESS_BASE_URL
            - run: yarn --cwd web run test:e2e

    docker-build-and-push:
        <<: *defaults
        executor: docker/docker
        steps:
            - setup_remote_docker
            - checkout
            - attach_workspace:
                  at: ~/repo
            - run: ls server web
            - docker/check
            - docker/build:
                  image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
                  cache_from: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
                  tag: $CIRCLE_SHA1,latest
            - docker/push:
                  image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
                  tag: $CIRCLE_SHA1,latest

    kubenetes-deploy:
        <<: *defaults
        docker:
            - image: 'cimg/base:stable'
        steps:
            - checkout
            - kubernetes/install-kubectl
            - kubernetes/install-kubeconfig
            - kubernetes/update-container-image:
                  namespace: $CIRCLE_PROJECT_REPONAME
                  container-image-updates: $CIRCLE_PROJECT_REPONAME=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
                  get-rollout-status: true
                  record: true
                  resource-name: deployment/$CIRCLE_PROJECT_REPONAME

workflows:
    install-and-test:
        jobs:
            - web-test
            - server-test
            - server-build:
                  requires:
                      - server-test
            - web-build:
                  requires:
                      - web-test
            - cypress-test:
                  requires:
                      - web-build
                      - server-build
            - docker-build-and-push:
                  requires:
                      - cypress-test
                  filters:
                      branches:
                          only:
                              - master
            - kubenetes-deploy:
                  requires:
                      - docker-build-and-push
                  filters:
                      branches:
                          only:
                              - master
